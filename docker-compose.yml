version: "3.9"

networks:
  assistant-network:
    driver: bridge

services:
  assistant-a:
    container_name: assistant-a
    build:
      context: .
      dockerfile: Dockerfile
    hostname: assistant-a.docker
    ports:
      - "4001:4001"
    environment:
      RELEASE_NAME: assistant-a
      PORT: 4001
      DATABASE_PATH: /app/assistant.db
      PHX_HOST: localhost:4001
      SECRET_KEY_BASE: 0sPmgUa1JGSPjRf6cFJnUnIt/iOUY7YZw1FXwnnLwiklnWxkwLu77XDddv/HsCNk
      BUMBLEBEE_OFFLINE: true
    volumes:
      - ~/.cache/bumblebee:/app/.bumblebee
    networks:
      - assistant-network
  assistant-b:
    container_name: assistant-b
    build:
      context: .
      dockerfile: Dockerfile
    hostname: assistant-b.docker
    ports:
      - "5001:5001"
    environment:
      RELEASE_NAME: assistant-b
      PORT: 5001
      DATABASE_PATH: /app/assistant.db
      PHX_HOST: localhost:5001
      SECRET_KEY_BASE: PeQSCFC+5ujFSb/SMpzXJryaRla6RUev3Vzcgr0ej9AErD/070ZLn1jvd4JlTBmC
      BUMBLEBEE_OFFLINE: true
    volumes:
      - ~/.cache/bumblebee:/app/.bumblebee
    networks:
      - assistant-network
  livebook:
    container_name: assistant-livebook
    image: ghcr.io/livebook-dev/livebook:edge
    hostname: assistant-livebook.docker
    environment:
      LIVEBOOK_PASSWORD: secretpassword
      LIVEBOOK_DISTRIBUTION: name
      LIVEBOOK_PORT: 8080
      LIVEBOOK_APPS_PATH: ./notebooks
      LIVEBOOK_NODE: assistant-livebook@assistant-livebook.docker
      LIVEBOOK_COOKIE: secret
      LIVEBOOK_DEFAULT_RUNTIME: attached:assistant-a@assistant-a.docker:secret
    ports:
      - "8001:8080"
    networks:
      - assistant-network
  # database:
  #   container_name: assistant-database
  #   image: postgres:15
  #   environment:
  #     POSTGRES_USER: assistant
  #     POSTGRES_PASSWORD: assistant
  #     POSTGRES_DB: assistant
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - assistant-network